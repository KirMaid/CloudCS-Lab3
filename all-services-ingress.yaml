apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-credentials
type: Opaque
data:
  db_password: bXlIYXJkUGFzczAwNw==
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15.2
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: db_password
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: pgdata
      volumes:
      - name: pgdata
        persistentVolumeClaim:
          claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    app: postgres
---
apiVersion: v1
kind: Secret
metadata:
  name: keycloak-credentials
type: Opaque
data:
  keycloak_admin_password: YWRtaW4wMDc=
#---
#apiVersion: v1
#data:
#  tls.crt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlFRFRDQ0F2V2dBd0lCQWdJVU9Kb2lqSkZEcEREMWhyektnUnNGVUp3UnlUOHdEUVlKS29aSWh2Y05BUUVMDQpCUUF3Z1pVeEN6QUpCZ05WQkFZVEFsSlZNUkl3RUFZRFZRUUlEQWxXYjJ4bmIyZHlZV1F4RWpBUUJnTlZCQWNNDQpDVlp2YkdkdlozSmhaREVUTUJFR0ExVUVDZ3dLVFhrZ1EyOXRjR0Z1ZVRFTE1Ba0dBMVVFQ3d3Q1NWUXhGekFWDQpCZ05WQkFNTURtdGxlV05zYjJGckxteHZZMkZzTVNNd0lRWUpLb1pJaHZjTkFRa0JGaFJoWkcxcGJrQnJaWGxqDQpiRzloYXk1c2IyTmhiREFlRncweU5ERXhNekF4T0RJMU16ZGFGdzB6TkRFeE1qZ3hPREkxTXpkYU1JR1ZNUXN3DQpDUVlEVlFRR0V3SlNWVEVTTUJBR0ExVUVDQXdKVm05c1oyOW5jbUZrTVJJd0VBWURWUVFIREFsV2IyeG5iMmR5DQpZV1F4RXpBUkJnTlZCQW9NQ2sxNUlFTnZiWEJoYm5reEN6QUpCZ05WQkFzTUFrbFVNUmN3RlFZRFZRUUREQTVyDQpaWGxqYkc5aGF5NXNiMk5oYkRFak1DRUdDU3FHU0liM0RRRUpBUllVWVdSdGFXNUFhMlY1WTJ4dllXc3ViRzlqDQpZV3d3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2d4MlYyZ0ljSGdlaXFsdHM0DQpSS0hIeStBa1h5NllnV1RwMEduM0pvd096NXZxTzlWdlZrM1MxNzhMR3ZoWTRGWmFndVVYRTY4RERtM1MwQ
#VdvDQpKY1MwQVRaREluU1lzZHdnQVhjN3dRV1RlU0J2d1N1NE16S1UwR05mTnVvaUlnTDhZRWVteCtKZEgrWXgxYk5YDQo1ZktqVCtMYkZROFRnbWhzMzFTYndhOGs3WVo4dStaaXlPQ0xWbGJTY1VWZkJDR0Y0eDNWNFFGTzgrWmVqMXJRDQozMGx2ZENUVzhJWmh3d3V2dDlNRGFMaXFvYTdyNDd6TVQzeTZpaGJmRFpRbXRxRGZxUmFrMmg0ZHpwZGtoU3BTDQpxc2gyOGFvUVNEN1JpUHRoMVNjbmFZR05vcUR3N
#2VpVERZYitDRHlQTHVnK1EzMS9LOWIvWnpCWWliQ1hFZC9YDQo4bUFQQWdNQkFBR2pVekJSTUIwR0ExVWREZ1FXQkJTUDk1alUvKzRCS0NzMUdKTDVzZjZkM2xKeUFEQWZCZ05WDQpIU01FR0RBV2dCU1A5NWpVLys0QktDczFHSkw1c2Y2ZDNsSnlBREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHDQpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ1ZZa3N5RHV2dVhKc09JVmp3cVpuaFZ4MkpNUnJ2Q1dZczhUS3pRR
#25IDQpNVjR1UHBqdDBKMG5MOXhyeEpKeDZSS2VuWnczYVRjNVRtTHZaU1lFUVlyMVI5STRYMGQ4ZjB4NmsxVWM1ejZ0DQpYckR0RG1MU3p0VFZmV0lOUWY3cGN4ektXYmdTbElkOVpQaVo5MUJRUzhOYzdudUJvU3Q0Z1A3aW83Nm5qZzdjDQpvcHljWUNkTDBSdmhqSFIrY3VqSU55ci9neDN6VEZZdTI2Ti92bXZXd08yVmgzNWtiL1dSMzJDUW1vM1BmNTFnDQo0cy9hWXdsbjFXcWw5L3RxSGhGZHRncHlzb05ZSC9kZGRmTEN0bmtwU3Nwai9xYnBnU1BNYU5qU3hMZ092S1o5DQo1SVZKUS96YVNjTVovV3JKeTZtM1pVZGJTMGp3bVlSUkFVUldkOEkwRmlPSg0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ0K"
#  tls.key: "LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tDQpNSUlFdndJQkFEQU5CZ2txaGtpRzl3MEJBUUVGQUFTQ0JLa3dnZ1NsQWdFQUFvSUJBUUNneDJWMmdJY0hnZWlxDQpsdHM0UktISHkrQWtYeTZZZ1dUcDBHbjNKb3dPejV2cU85VnZWazNTMTc4TEd2aFk0RlphZ3VVWEU2OEREbTNTDQowQVdvSmNTMEFUWkRJblNZc2R3Z0FYYzd3UVdUZVNCdndTdTRNektVMEdOZk51b2lJZ0w4WUVlbXgrSmRIK
#1l4DQoxYk5YNWZLalQrTGJGUThUZ21oczMxU2J3YThrN1laOHUrWml5T0NMVmxiU2NVVmZCQ0dGNHgzVjRRRk84K1plDQpqMXJRMzBsdmRDVFc4SVpod3d1dnQ5TURhTGlxb2E3cjQ3ek1UM3k2aWhiZkRaUW10cURmcVJhazJoNGR6cGRrDQpoU3BTcXNoMjhhb1FTRDdSaVB0aDFTY25hWUdOb3FEdzdlaVREWWIrQ0R5UEx1ZytRMzEvSzliL1p6QllpYkNYDQpFZC9YOG1BUEFnTUJBQUVDZ2dFQUtnbW9xbERWd
#lcxR2w5L2t4clFQTnMzRU44NVpRUS9JQW1oM1pHTkVTSlVZDQoxNmc0V0ttUXBKbTdmbHhaWmVlV1BJa3YvQll0OHRjaGVQYmlHOEp3U1g1dG9TVVBwbU1Pd3FHUGV1U3ZvQTBTDQpJWlk0NTZzZlJSQ3RndFk1WnA1TStJNzEvUklUU2pVT2U2WThBN1lBZUpucEgwNUV5RjJYRHl4ZmszQVRhc3h6DQo2Q2xpOEVXeVlhR2RzSUZaeDF5VkoyYmJwZlY1OXNZS0lIQnFYVXpoemhhR2g5S3JNdVNrR1BCZWIyQVNQY
#1hZDQpGWUZHeGRseW0yZmxsaVBkNy85bFpsbDFrd1RDK1ZnOTZuaXJBelorcFgvV1Y1Y1R0ZUljZWxUVis0VjFsNmVZDQowdVcxUkVlbWJMeXFZWDFseE5ybFJZZFlrSEd4Ui8rU3NCa1czcFpkUlFLQmdRRFRlWFMzYldFSHFDMlpBaHljDQowK2g2MXhXMS94dEVPQm9EMG1Wems2QmJmWFhZd0xvYjNwVVlMMWZLdzdDQjUyWXpkdXFJYlJ0Slp6L0RJY2hzDQpGQ0dRVWNac2UrazJSUlhMcmhnUEczMExibG9JS
#DhhZjduOHQ1SHN2YU82YUdCTzdBbmZyQmxHaVdSSW9ST1RpDQpsQUJleWxxUW9DbTFFNU9UdnRQa3lxZDJEUUtCZ1FEQ29XN3I4YXN2a2YrLzNiNzVDd1JIRTM3K1hmbXBzWmpRDQovbDYwQ1pwWUhYSzRpMHJZaVFYNCtjYW52QWg1MkN0TUUrbDU4Y1JZNXFmcTBTUUUzbjFvdTMraFdJYk52c2lDDQpLeVJHZWJDM25qVGw3bXhtMTB4ZWFkdWNNL0hZWURiRTJQWk9NZFdXSVZjN0RJM1FtR2dmc1lkck8wVFdBc
#kxFDQozS3JvSm9laml3S0JnUUNvcnhUK3kyeStZdFFjWEtiZUlkb3JRaTI3UW9aSllFYkFEYStIQlphLzQ4K0EyaHFaDQo2RzRkSUlaeTRxMkVzVVBBZ1hhSzVCMEQ3Q3ZjUnJKTUk3S3lIOGlhK0N3S2NnajBzeVhWeHlOelhzN0o5QzdIDQptOEl1cFRYdGwxSGI4S0NzWjBlb1hSMzQxZnU1eTFxWHNWNnFQZGNIemZuMnltckpTMHBTRWFTS2NRS0JnUUNXDQovaHlLaVRzd05Zait0YTVCa1ExcGdyT0Q3UzRTT
#3doK0lza2Z6VTlqU3IxRWREUEZsMC85M3ZFQ0VmdFZZNkg3DQpiSHMyTXAwTUJ5MkFHMjVoSkthUVNOMzBNelNwaTNnTW5DR1JWemtFeW9UcFdMWGFkdTcxVkJTZXN5SE5wcDcyDQp5Z2NUbE0vSm4rWUhsbTZ5eEhvTEZIUWxlWjZtbFFOUmZJeE9mQTNBandLQmdRQ1EwZmRPazhoQVJYWG5ydlg2DQpwdGsvOWw0UXFBTEVTZ1ZUY0RHUVVXcVZPSWo0eUtnY3Zqa1ZhYzZIQThvVGxieXF3UVNzSnRaSUJaSDNCb2l4DQpKUWx1bHUraHRWUnZmQ3h4RW52amRySDloNVNaR2ZXZStaajk4Mmx0ZDJPc2h4bG9ia0VXbk5FR3VqaktvVUV4DQp3dHlGcEV5RlVtOWFWVUhYOXJnWkc0Q0VMZz09DQotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tDQo=а"
#kind: Secret
#metadata:
#  name: keycloak-tls-secret
#type: kubernetes.io/tls
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      containers:
        - name: keycloak
          image: ialavash/cloud-cs:keycloak
          env:
            - name: KC_DB_URL_HOST
              value: "postgres"
            - name: KC_DB_URL_PORT
              value: "5432"
            - name: KC_DB_USERNAME
              value: "postgres"
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: db_password
            - name: KEYCLOAK_ADMIN
              value: "admin"
            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-credentials
                  key: keycloak_admin_password
          args: [ "start" ]
          ports:
            - containerPort: 8443
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak
spec:
  type: ClusterIP
  ports:
  - port: 8443
    targetPort: 8443
  selector:
    app: keycloak
---
apiVersion: v1
kind: Secret
metadata:
  name: inference-credentials
type: Opaque
data:
  client_secret: M3pGbmg3MUFrWlBDUkR3S0x6VmpCektRcDh2R0lxdHA=
#  aQM215R1uLaCrUbZorFw3rxPs65qcegk закодировать
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inference-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: inference
  template:
    metadata:
      labels:
        app: inference
    spec:
      containers:
        - name: inference
          image: ialavash/cloud-cs:inference-service
          env:
            - name: MODEL_PATH
              value: "/models/pipeline.pkl"
            - name: KEYCLOAK_URL
              value: "https://keycloak:8443"
            - name: CLIENT_ID
              value: "inference-client"
            - name: CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: inference-credentials
                  key: client_secret
          ports:
            - containerPort: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: inference
spec:
  type: ClusterIP
  ports:
  - port: 8888
    targetPort: 8000
  selector:
    app: inference
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: my-autoscaling
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: inference-deployment
  minReplicas: 1
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target: 
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target: 
          type: Utilization
          averageUtilization: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-ingress
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
    - hosts:
        - keycloak.local
        - inference.local
      secretName: keycloak-tls-secret
  rules:
    - host: keycloak.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: keycloak
                port:
                  number: 8443
    - host: inference.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: inference
                port:
                  number: 8888





