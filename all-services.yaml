apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-credentials
type: Opaque
data:
  db_password: bXlIYXJkUGFzczAwNw==
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
spec: # Начало спецификации деплоймента
  replicas: 1 # Количество запускаемых реплик
  selector:
    matchLabels:
      app: postgres
  template: # Селектор для выбора запускаемого пода
    metadata:
      labels:
        app: postgres
    spec: # Конфигурация пода
      containers:
      - name: postgres
        image: postgres:15.2
        env:
        - name: POSTGRES_PASSWORD # Задаём переменные среды через secret
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: db_password
        volumeMounts: # Указываем место монтирования тома
        - mountPath: postgresql/data
          name: pgdata
      volumes: # Указываем конфигурацию монтирования тома
      - name: pgdata
        persistentVolumeClaim:
          claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  type: ClusterIP # Под доступен только внутри кластера
  ports: # Настраиваем внешний порт, доступный для остальных сервисов и ему соответствующий внутренний
  - port: 5432
    targetPort: 5432
  selector:
    app: postgres # Указываем метку пода
---
apiVersion: v1
kind: Secret
metadata:
  name: keycloak-credentials
type: Opaque # Cодержимое секрета является произвольными данными, поэтому такой тип
data:
  keycloak_admin_password: YWRtaW4wMDc=
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      containers:
        - name: keycloak
          image: ialavash/cloud-cs:keycloak
          env:
            - name: KC_DB_URL_HOST
              value: "postgres"
            - name: KC_DB_URL_PORT
              value: "5432"
            - name: KC_DB_USERNAME
              value: "postgres"
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: db_password
            - name: KEYCLOAK_ADMIN
              value: "admin"
            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-credentials
                  key: keycloak_admin_password
          args: [ "start" ] # Аргументы запуска контейнера
          ports:
            - containerPort: 8443
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak
spec:
  type: LoadBalancer
  ports:
  - port: 8443
    targetPort: 8443
  selector:
    app: keycloak
---
apiVersion: v1
kind: Secret
metadata:
  name: inference-credentials
type: Opaque
data:
  client_secret: M3pGbmg3MUFrWlBDUkR3S0x6VmpCektRcDh2R0lxdHA=
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inference-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: inference
  template:
    metadata:
      labels:
        app: inference
    spec:
      containers:
        - name: inference
          image: ialavash/cloud-cs:inference-service
          env:
            - name: MODEL_PATH
              value: "models/pipeline.pkl"
            - name: KEYCLOAK_URL
              value: "https://keycloak:8443"
            - name: CLIENT_ID
              value: "inference-client"
            - name: CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: inference-credentials
                  key: client_secret
          ports:
            - containerPort: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: inference
spec:
  type: LoadBalancer
  ports:
  - port: 8888
    targetPort: 8000
  selector:
    app: inference
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: my-autoscaling
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: inference-deployment
  minReplicas: 1
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80




